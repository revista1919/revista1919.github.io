name: Newsletter masiva personalizada

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  newsletter:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    # Descargar CSV de noticias/artÃ­culos
    - name: Descargar CSV de noticias
      run: curl -s "https://docs.google.com/spreadsheets/d/e/2PACX-1vQKnN8qMJcBN8im9Q61o-qElx1jQp5NdS80_B-FakCHrPLXHlQ_FXZWT0o5GVVHAM26l9sjLxsTCNO8/pub?gid=0&single=true&output=csv" -o news.csv

    # Descargar CSV de suscriptores
    - name: Descargar CSV de suscriptores
      run: curl -s "https://docs.google.com/spreadsheets/d/e/2PACX-1vTu1d-C71qlEyhbU4-RI6ade0t3Cj-Gkysfx-stI5uylOpWjjcHmNJNzNYS64jSE6Xb_LCNwdCmfMw/pub?output=csv" -o subscribers.csv

    # Comparar con CSV anterior
    - name: Comparar noticias con Ãºltima versiÃ³n
      id: diff
      run: |
        mkdir -p data
        if [ -f data/last_news.csv ]; then
          diff=$(comm -13 <(sort data/last_news.csv) <(sort news.csv))
          echo "$diff" > data/diff.txt
        else
          cp news.csv data/last_news.csv
          echo "" > data/diff.txt
        fi
        echo "diff<<EOF" >> $GITHUB_OUTPUT
        cat data/diff.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    # Generar newsletter HTML con bloques personalizados
    - name: Generar newsletter HTML
      if: steps.diff.outputs.diff != ''
      id: format
      run: |
        echo "<html><body style='font-family:Arial, sans-serif; background:#f4f4f4; color:#333; margin:0; padding:20px;'>" > newsletter.html
        echo "<div style='max-width:600px; margin:auto; background:#ffffff; padding:25px; border-radius:10px; box-shadow:0 0 10px rgba(0,0,0,0.1);'>" >> newsletter.html
        echo "<h2 style='color:#1a73e8;'>ðŸ“° Novedades de la Revista</h2>" >> newsletter.html

        # Generar bloque por suscriptor
        while IFS=',' read -r fullname email
        do
          first=$(echo "$fullname" | awk '{print $1}')
          echo "<div style='margin-bottom:25px; padding:15px; border:1px solid #ddd; border-radius:8px; background:#f9f9f9;'>" >> newsletter.html
          echo "<p style='font-size:16px;'>Estimado <b>$first</b>,</p>" >> newsletter.html

          while IFS=',' read -r title content
          do
            formatted=$(echo "$content" \
              | sed -E 's#/([^/]+)/#<i>\1</i>#g' \
              | sed -E 's#\*([^\*]+)\*#<b>\1</b>#g' \
              | sed 's/===/<br\/><br\/>/g' \
              | sed -E 's#([A-Za-z0-9_]+)\(([^\)]+)\)#<a href="\2" style="color:#1a73e8">\1</a>#g')
            
            echo "<div style='margin-bottom:15px; padding:10px; border:1px solid #ccc; border-radius:6px; background:#fafafa;'>" >> newsletter.html
            echo "<h3 style='color:#333;'>$title</h3>" >> newsletter.html
            echo "<p style='font-size:14px; line-height:1.6;'>$formatted</p>" >> newsletter.html
            echo "</div>" >> newsletter.html
          done < data/diff.txt

          echo "</div>" >> newsletter.html
        done < subscribers.csv

        # Pie de pÃ¡gina elegante
        echo "<p style='font-size:12px; color:#777; text-align:center; margin-top:30px;'>Puedes visitar la revista <a href='https://revista1919.github.io/' style='color:#1a73e8;'>aquÃ­</a>.</p>" >> newsletter.html
        echo "</div></body></html>" >> newsletter.html

        # Generar lista BCC
        bcc_list=$(awk -F',' '{print $2}' subscribers.csv | paste -sd "," -)
        echo "bcc=$bcc_list" >> $GITHUB_OUTPUT

    # Enviar newsletter a todos los suscriptores en BCC
    - name: Enviar newsletter
      if: steps.diff.outputs.diff != ''
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.GMAIL_USER }}
        password: ${{ secrets.GMAIL_PASS }}
        subject: "ðŸ“° Newsletter - Novedades"
        to: ${{ secrets.GMAIL_USER }}  # remitente principal
        bcc: ${{ steps.format.outputs.bcc }}
        from: "Revista Nacional <${{ secrets.GMAIL_USER }}>"
        content_type: text/html
        body: ${{ steps.format.outputs.body }}

    - name: Guardar CSV actual
      run: cp news.csv data/last_news.csv
